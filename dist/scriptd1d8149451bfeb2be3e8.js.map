{"version":3,"file":"scriptd1d8149451bfeb2be3e8.js","mappings":"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","sources":["webpack://webpack5-starter-pack/./src/index.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/** @format */\n\nconst taskBox = document.querySelector('.task-box');\nconst taskInput = document.querySelector('.task-input input');\nconst clearAll = document.querySelector('.clear-btn');\n\nlet editId;\nlet isEditedTask = false;\n// getting localStorage todo-list\nlet todos = JSON.parse(localStorage.getItem('todo-list'));\n\nconst showTodo = (filter) => {\n  let li = '';\n  if (todos) {\n    todos.forEach((todo, id) => {\n      // if todo status is completed, set the isCompleted value to checked\n      const isCompleted = todo.status === 'completed' ? 'checked' : '';\n      if (filter === todo.status || filter === 'all') {\n        li += `\n          <li class=\"task\">\n            <label for=\"${id}\">\n              <input onclick=\"updateStatus(this)\" type=\"checkbox\" ${isCompleted} name=\"checkbox\" id=\"${id}\">\n              <p class='${isCompleted}'>${todo.name}</p>\n            </label>\n            <div class=\"settings\">\n              <i onclick=\"showMenu(this)\" class=\"uil uil-ellipsis-h\"></i>\n              <ul class=\"task-menu\">\n                <li onclick=\"editTask(${id}, '${todo.name}')\"><i class=\"uil uil-pen\"></i>Edit</li>\n                <li onclick=\"deleteTask(${id})\"><i class=\"uil uil-trash\"></i>Delete</li>\n              </ul>\n            </div>\n          </li>\n        `;\n      }\n    });\n  }\n  taskBox.innerHTML = li || \"<span>You don't have any tasks here yet</span>\";\n};\nshowTodo('all');\n\nconst showMenu = (selectedTask) => {\n  // Getting task menu div\n  const taskMenu = selectedTask.parentElement.lastElementChild;\n  taskMenu.classList.add('show');\n  document.addEventListener('click', (e) => {\n    // Removing show class from the task Menu on document click\n    if (e.target.tagName !== 'I' || e.target !== selectedTask) {\n      taskMenu.classList.remove('show');\n    }\n  });\n};\n\nconst editTask = (taskId, taskName) => {\n  editId = taskId;\n  isEditedTask = true;\n  taskInput.value = taskName;\n};\n\nconst deleteTask = (deleteId) => {\n  // Removing selected task from array/todos\n  todos.splice(deleteId, 1);\n  localStorage.setItem('todo-list', JSON.stringify(todos));\n  showTodo('all');\n};\n\nclearAll.addEventListener('click', () => {\n  // Removing all tasks from array/todos\n  todos.splice(0, todos.length);\n  localStorage.setItem('todo-list', JSON.stringify(todos));\n  showTodo('all');\n});\n\nconst updateStatus = (selectedTask) => {\n  // getting paragraph that contains task name\n  const taskName = selectedTask.parentElement.lastElementChild;\n  if (selectedTask.checked) {\n    taskName.classList.add('checked');\n    todos[selectedTask.id].status = 'completed';\n  } else {\n    taskName.classList.remove('checked');\n    todos[selectedTask.id].status = 'pending';\n  }\n  localStorage.setItem('todo-list', JSON.stringify(todos));\n};\n\ntaskInput.addEventListener('keyup', (e) => {\n  const userTask = taskInput.value.trim();\n  if (e.key === 'Enter' && userTask) {\n    if (!isEditedTask) {\n      // if edited task isn't true\n      if (!todos) {\n        // if todo-list doesn't exist, pass an empty array to todos\n        todos = [];\n      }\n\n      const taskInfo = { name: userTask, status: 'pending' };\n      // adding a new task to todos\n      todos.push(taskInfo);\n    } else {\n      isEditedTask = false;\n      todos[editId].name = userTask;\n    }\n    taskInput.value = '';\n    localStorage.setItem('todo-list', JSON.stringify(todos));\n    showTodo('all');\n  }\n});\n"],"names":["taskBox","document","querySelector","taskInput","clearAll","editId","isEditedTask","todos","JSON","parse","localStorage","getItem","showTodo","filter","li","forEach","todo","id","isCompleted","status","concat","name","innerHTML","showMenu","selectedTask","taskMenu","parentElement","lastElementChild","classList","add","addEventListener","e","target","tagName","remove","editTask","taskId","taskName","value","deleteTask","deleteId","splice","setItem","stringify","length","updateStatus","checked","userTask","trim","key","taskInfo","push"],"sourceRoot":""}